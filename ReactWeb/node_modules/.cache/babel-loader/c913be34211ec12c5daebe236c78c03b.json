{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Config from \"../config\";\nimport axios from \"axios\";\n\n// const useFetchHouses = (): House[] => {\n//   const [allHouses, setAllHouses] = useState<House[]>([]);\n//   useEffect(() => {\n//     const fetchHouses = async () => {\n//       const rsp = await fetch(`${Config.baseApiUrl}/houses`);\n//       const houses = await rsp.json();\n//       setAllHouses(houses);\n//     };\n//     fetchHouses();\n//   }, []);\n//   return allHouses;\n// };\nconst useFetchHouses = () => {\n  _s();\n\n  return useQuery(\"houses\", () => axios.get(`${Config.baseApiUrl}/houses`).then(resp => resp.data));\n};\n\n_s(useFetchHouses, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nconst useFetchHouse = id => {\n  _s2();\n\n  return useQuery([\"houses\", id], () => axios.get(`${Config.baseApiUrl}/house/${id}`).then(resp => resp.data));\n};\n\n_s2(useFetchHouse, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nconst useAddHouse = () => {\n  _s3();\n\n  const queryClient = useQueryClient();\n  const nav = useNavigate();\n  return useMutation(h => axios.post(`${Config.baseApiUrl}/houses`, h), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"houses\");\n      nav(\"/\");\n    }\n  });\n};\n\n_s3(useAddHouse, \"XPB0hv5Zs7TVIAHMfFM+PKzt5cw=\", false, function () {\n  return [useQueryClient, useNavigate, useMutation];\n});\n\nconst useUpdateHouse = () => {\n  _s4();\n\n  const queryClient = useQueryClient();\n  const nav = useNavigate();\n  return useMutation(h => axios.put(`${Config.baseApiUrl}/houses`, h), {\n    onSuccess: (_, house) => {\n      queryClient.invalidateQueries(\"houses\");\n      nav(`/house/${house.id}`);\n    }\n  });\n};\n\n_s4(useUpdateHouse, \"XPB0hv5Zs7TVIAHMfFM+PKzt5cw=\", false, function () {\n  return [useQueryClient, useNavigate, useMutation];\n});\n\nconst useDeleteHouse = () => {\n  _s5();\n\n  const queryClient = useQueryClient();\n  const nav = useNavigate();\n  return useMutation(h => axios.delete(`${Config.baseApiUrl}/houses/${h.id}`), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"houses\");\n      nav(\"/\");\n    }\n  });\n};\n\n_s5(useDeleteHouse, \"XPB0hv5Zs7TVIAHMfFM+PKzt5cw=\", false, function () {\n  return [useQueryClient, useNavigate, useMutation];\n});\n\nexport { useFetchHouses, useFetchHouse, useAddHouse, useUpdateHouse, useDeleteHouse };","map":{"version":3,"sources":["/Users/vineetrai/Desktop/ps-globomantics-webapi-react/ReactWeb/src/hooks/HouseHooks.ts"],"names":["useNavigate","useMutation","useQuery","useQueryClient","Config","axios","useFetchHouses","get","baseApiUrl","then","resp","data","useFetchHouse","id","useAddHouse","queryClient","nav","h","post","onSuccess","invalidateQueries","useUpdateHouse","put","_","house","useDeleteHouse","delete"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,cAAhC,QAAsD,aAAtD;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAiD,OAAjD;;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,SAAOJ,QAAQ,CAAsB,QAAtB,EAAgC,MAC7CG,KAAK,CAACE,GAAN,CAAW,GAAEH,MAAM,CAACI,UAAW,SAA/B,EAAyCC,IAAzC,CAA+CC,IAAD,IAAUA,IAAI,CAACC,IAA7D,CADa,CAAf;AAGD,CAJD;;GAAML,c;UACGJ,Q;;;AAKT,MAAMU,aAAa,GAAIC,EAAD,IAAgB;AAAA;;AACpC,SAAOX,QAAQ,CAAoB,CAAC,QAAD,EAAWW,EAAX,CAApB,EAAoC,MACjDR,KAAK,CAACE,GAAN,CAAW,GAAEH,MAAM,CAACI,UAAW,UAASK,EAAG,EAA3C,EAA8CJ,IAA9C,CAAoDC,IAAD,IAAUA,IAAI,CAACC,IAAlE,CADa,CAAf;AAGD,CAJD;;IAAMC,a;UACGV,Q;;;AAKT,MAAMY,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,WAAW,GAAGZ,cAAc,EAAlC;AACA,QAAMa,GAAG,GAAGhB,WAAW,EAAvB;AACA,SAAOC,WAAW,CACfgB,CAAD,IAAOZ,KAAK,CAACa,IAAN,CAAY,GAAEd,MAAM,CAACI,UAAW,SAAhC,EAA0CS,CAA1C,CADS,EAEhB;AACEE,IAAAA,SAAS,EAAE,MAAM;AACfJ,MAAAA,WAAW,CAACK,iBAAZ,CAA8B,QAA9B;AACAJ,MAAAA,GAAG,CAAC,GAAD,CAAH;AACD;AAJH,GAFgB,CAAlB;AASD,CAZD;;IAAMF,W;UACgBX,c,EACRH,W,EACLC,W;;;AAWT,MAAMoB,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMN,WAAW,GAAGZ,cAAc,EAAlC;AACA,QAAMa,GAAG,GAAGhB,WAAW,EAAvB;AACA,SAAOC,WAAW,CACfgB,CAAD,IAAOZ,KAAK,CAACiB,GAAN,CAAW,GAAElB,MAAM,CAACI,UAAW,SAA/B,EAAyCS,CAAzC,CADS,EAEhB;AACEE,IAAAA,SAAS,EAAE,CAACI,CAAD,EAAIC,KAAJ,KAAc;AACvBT,MAAAA,WAAW,CAACK,iBAAZ,CAA8B,QAA9B;AACAJ,MAAAA,GAAG,CAAE,UAASQ,KAAK,CAACX,EAAG,EAApB,CAAH;AACD;AAJH,GAFgB,CAAlB;AASD,CAZD;;IAAMQ,c;UACgBlB,c,EACRH,W,EACLC,W;;;AAWT,MAAMwB,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMV,WAAW,GAAGZ,cAAc,EAAlC;AACA,QAAMa,GAAG,GAAGhB,WAAW,EAAvB;AACA,SAAOC,WAAW,CACfgB,CAAD,IAAOZ,KAAK,CAACqB,MAAN,CAAc,GAAEtB,MAAM,CAACI,UAAW,WAAUS,CAAC,CAACJ,EAAG,EAAjD,CADS,EAEhB;AACEM,IAAAA,SAAS,EAAE,MAAM;AACfJ,MAAAA,WAAW,CAACK,iBAAZ,CAA8B,QAA9B;AACAJ,MAAAA,GAAG,CAAC,GAAD,CAAH;AACD;AAJH,GAFgB,CAAlB;AASD,CAZD;;IAAMS,c;UACgBtB,c,EACRH,W,EACLC,W;;;AAWT,SACEK,cADF,EAEEM,aAFF,EAGEE,WAHF,EAIEO,cAJF,EAKEI,cALF","sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { House } from \"./../types/house\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Config from \"../config\";\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\nimport Problem from \"../types/problem\";\nimport { useEffect, useState } from \"react\";\n\n// const useFetchHouses = (): House[] => {\n//   const [allHouses, setAllHouses] = useState<House[]>([]);\n\n//   useEffect(() => {\n//     const fetchHouses = async () => {\n//       const rsp = await fetch(`${Config.baseApiUrl}/houses`);\n//       const houses = await rsp.json();\n//       setAllHouses(houses);\n//     };\n//     fetchHouses();\n//   }, []);\n\n//   return allHouses;\n// };\n\nconst useFetchHouses = () => {\n  return useQuery<House[], AxiosError>(\"houses\", () =>\n    axios.get(`${Config.baseApiUrl}/houses`).then((resp) => resp.data)\n  );\n};\n\nconst useFetchHouse = (id: number) => {\n  return useQuery<House, AxiosError>([\"houses\", id], () =>\n    axios.get(`${Config.baseApiUrl}/house/${id}`).then((resp) => resp.data)\n  );\n};\n\nconst useAddHouse = () => {\n  const queryClient = useQueryClient();\n  const nav = useNavigate();\n  return useMutation<AxiosResponse, AxiosError<Problem>, House>(\n    (h) => axios.post(`${Config.baseApiUrl}/houses`, h),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"houses\");\n        nav(\"/\");\n      },\n    }\n  );\n};\n\nconst useUpdateHouse = () => {\n  const queryClient = useQueryClient();\n  const nav = useNavigate();\n  return useMutation<AxiosResponse, AxiosError<Problem>, House>(\n    (h) => axios.put(`${Config.baseApiUrl}/houses`, h),\n    {\n      onSuccess: (_, house) => {\n        queryClient.invalidateQueries(\"houses\");\n        nav(`/house/${house.id}`);\n      },\n    }\n  );\n};\n\nconst useDeleteHouse = () => {\n  const queryClient = useQueryClient();\n  const nav = useNavigate();\n  return useMutation<AxiosResponse, AxiosError, House>(\n    (h) => axios.delete(`${Config.baseApiUrl}/houses/${h.id}`),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(\"houses\");\n        nav(\"/\");\n      },\n    }\n  );\n};\n\nexport {\n  useFetchHouses,\n  useFetchHouse,\n  useAddHouse,\n  useUpdateHouse,\n  useDeleteHouse,\n};\n"]},"metadata":{},"sourceType":"module"}